(self.webpackChunk=self.webpackChunk||[]).push([[1482],{3905:(t,e,n)=>{"use strict";n.d(e,{Zo:()=>s,kt:()=>c});var r=n(67294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function l(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var m=r.createContext({}),d=function(t){var e=r.useContext(m),n=e;return t&&(n="function"==typeof t?t(e):l(l({},e),t)),n},s=function(t){var e=d(t.components);return r.createElement(m.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},u=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,o=t.originalType,m=t.parentName,s=i(t,["components","mdxType","originalType","parentName"]),u=d(n),c=a,k=u["".concat(m,".").concat(c)]||u[c]||p[c]||o;return n?r.createElement(k,l(l({ref:e},s),{},{components:n})):r.createElement(k,l({ref:e},s))}));function c(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=n.length,l=new Array(o);l[0]=u;var i={};for(var m in e)hasOwnProperty.call(e,m)&&(i[m]=e[m]);i.originalType=t,i.mdxType="string"==typeof t?t:a,l[1]=i;for(var d=2;d<o;d++)l[d]=n[d];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},64967:(t,e,n)=>{"use strict";n.r(e),n.d(e,{frontMatter:()=>l,contentTitle:()=>i,metadata:()=>m,toc:()=>d,default:()=>p});var r=n(22122),a=n(19756),o=(n(67294),n(3905)),l={id:"FormButtons",title:"<FormButtons>"},i=void 0,m={unversionedId:"api/carry-on-react-forms/FormButtons",id:"api/carry-on-react-forms/FormButtons",isDocsHomePage:!1,title:"<FormButtons>",description:"Render form buttons using form helpers passed to the render function.",source:"@site/../docs/api/carry-on-react-forms/FormButtons.md",sourceDirName:"api/carry-on-react-forms",slug:"/api/carry-on-react-forms/FormButtons",permalink:"/carry-on/docs/api/carry-on-react-forms/FormButtons",version:"current",lastUpdatedBy:"Russ Panula",lastUpdatedAt:1622100530,formattedLastUpdatedAt:"5/27/2021",frontMatter:{id:"FormButtons",title:"<FormButtons>"},sidebar:"docs",previous:{title:"<Form>",permalink:"/carry-on/docs/api/carry-on-react-forms/Form"},next:{title:"<FormState>",permalink:"/carry-on/docs/api/carry-on-react-forms/FormState"}},d=[{value:"Properties",id:"properties",children:[]},{value:"render({ submit, reset })",id:"render-submit-reset-",children:[]}],s={toc:d};function p(t){var e=t.components,n=(0,a.Z)(t,["components"]);return(0,o.kt)("wrapper",(0,r.Z)({},s,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Render form buttons using form helpers passed to the render function."),(0,o.kt)("p",null,"If this component doesn't have a parent ",(0,o.kt)("inlineCode",{parentName:"p"},"Form")," component, you must use the ",(0,o.kt)("inlineCode",{parentName:"p"},"form")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"store")," properties to choose a form."),(0,o.kt)("h2",{id:"properties"},"Properties"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Property"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"children")),(0,o.kt)("td",{parentName:"tr",align:null},"Render function, see below")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"from")," or ",(0,o.kt)("inlineCode",{parentName:"td"},"store")),(0,o.kt)("td",{parentName:"tr",align:null},"What store to retrieve state from.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"form")),(0,o.kt)("td",{parentName:"tr",align:null},"What form to retrieve state from.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"throttle")),(0,o.kt)("td",{parentName:"tr",align:null},"Milliseconds to throttle change requests")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"debounce")),(0,o.kt)("td",{parentName:"tr",align:null},"Milliseconds to debounce change requests")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"debug")),(0,o.kt)("td",{parentName:"tr",align:null},"When true, log messages regarding state changes will be printed to the ",(0,o.kt)("inlineCode",{parentName:"td"},"console"),".")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"verbose")),(0,o.kt)("td",{parentName:"tr",align:null},"When true, verbose log messages are printed to the ",(0,o.kt)("inlineCode",{parentName:"td"},"console"),".")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"id")),(0,o.kt)("td",{parentName:"tr",align:null},"Debug log uses this to identify components")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"onMount")),(0,o.kt)("td",{parentName:"tr",align:null},"Called with the current state when the component mounts.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"onUnmount")),(0,o.kt)("td",{parentName:"tr",align:null},"Called with the current state when the component unmounts.")))),(0,o.kt)("h2",{id:"render-submit-reset-"},"render({ submit, reset })"),(0,o.kt)("p",null,"The render function receives an object containing form button attributes to use on button elements."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Button"),(0,o.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"submit"),(0,o.kt)("td",{parentName:"tr",align:null},"onClick"),(0,o.kt)("td",{parentName:"tr",align:null},"Event handler")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null},"disabled"),(0,o.kt)("td",{parentName:"tr",align:null},"Is submit button disabled")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null})),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"reset"),(0,o.kt)("td",{parentName:"tr",align:null},"onClick"),(0,o.kt)("td",{parentName:"tr",align:null},"Event handler")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null},"disabled"),(0,o.kt)("td",{parentName:"tr",align:null},"Is reset button disabled")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"live noInline",live:!0,noInline:!0},'import { Form, Field, FormButtons, FormState } from "carry-on-react-forms";\n\nconst storeId = "forms";\n\nconst myForm = {\n  id: "examples.myForm",\n  initialValues: {\n    field1: "value1",\n    field2: "value2"\n  },\n  onValidate:\n    ({ get, set, id }) =>\n    values => ({\n      errors: {},\n      isValid: true\n    }),\n  onSubmit:\n    ({ get, set, id }) =>\n    values => {\n      alert(JSON.stringify(values));\n    }\n};\n\nrender(\n  <Form {...myForm} from={storeId}>\n    {/* Form Controls */}\n    <Field path="field1">{({ element }) => <input {...element} />}</Field>\n    <Field path="field2">{({ element }) => <input {...element} />}</Field>\n    <FormButtons>\n      {({ submit, reset }) => (\n        <>\n          <div>\n            <button {...submit}>Submit</button>\n            <button {...reset}>Reset</button>\n          </div>\n        </>\n      )}\n    </FormButtons>\n    {/********************/}\n\n    {/* State Inspectors */}\n    <h4>State:</h4>\n    <h5>field1:</h5>\n    <Field path="field1">{field => <Inspector data={field} />}</Field>\n    <h5>field2:</h5>\n    <Field path="field2">{field => <Inspector data={field} />}</Field>\n    <FormButtons>\n      {({ submit, reset }) => (\n        <>\n          <h5>\n            <i>submit</i>:\n          </h5>\n          <Inspector data={submit} />\n          <h5>\n            <i>reset</i>:\n          </h5>\n          <Inspector data={reset} />\n        </>\n      )}\n    </FormButtons>\n    <FormState>\n      {form => (\n        <>\n          <h5>Form state:</h5>\n          <Inspector data={form} />\n        </>\n      )}\n    </FormState>\n    <h5>Store state:</h5>\n    <StateInspector from={storeId} />\n    {/********************/}\n  </Form>\n);\n')))}p.isMDXComponent=!0}}]);