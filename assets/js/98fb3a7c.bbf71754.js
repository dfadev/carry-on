(self.webpackChunk=self.webpackChunk||[]).push([[37],{3905:(e,t,n)=>{"use strict";n.d(t,{Zo:()=>u,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),c=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(n),g=r,f=d["".concat(o,".").concat(g)]||d[g]||p[g]||i;return n?a.createElement(f,s(s({ref:t},u),{},{components:n})):a.createElement(f,s({ref:t},u))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=d;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:r,s[1]=l;for(var c=2;c<i;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4378:(e,t,n)=>{"use strict";n.r(t),n.d(t,{frontMatter:()=>s,metadata:()=>l,toc:()=>o,default:()=>u});var a=n(2122),r=n(9756),i=(n(7294),n(3905)),s={id:"registeringState",title:"Registering State"},l={unversionedId:"registeringState",id:"registeringState",isDocsHomePage:!1,title:"Registering State",description:"Import",source:"@site/../docs/registeringState.md",sourceDirName:".",slug:"/registeringState",permalink:"/carry-on/docs/registeringState",version:"current",lastUpdatedBy:"Russ Panula",lastUpdatedAt:1619946735,formattedLastUpdatedAt:"5/2/2021",frontMatter:{id:"registeringState",title:"Registering State"},sidebar:"docs",previous:{title:"Getting Started",permalink:"/carry-on/docs/"},next:{title:"Using State",permalink:"/carry-on/docs/usingState"}},o=[{value:"Import",id:"import",children:[]},{value:"Define",id:"define",children:[{value:"As a function",id:"as-a-function",children:[]},{value:"As an object",id:"as-an-object",children:[]},{value:"Actions",id:"actions",children:[]}]},{value:"Register",id:"register",children:[{value:"Register on default store:",id:"register-on-default-store",children:[]},{value:"Register on a named store:",id:"register-on-a-named-store",children:[]}]},{value:"Multiple registrations",id:"multiple-registrations",children:[{value:"Multiple calls",id:"multiple-calls",children:[]},{value:"Array of registrations",id:"array-of-registrations",children:[]}]}],c={toc:o};function u(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"import"},"Import"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'\nimport { register } from "carry-on-store";\n\n')),(0,i.kt)("h2",{id:"define"},"Define"),(0,i.kt)("h3",{id:"as-a-function"},"As a function"),(0,i.kt)("p",null,"State can be defined by a function accepting one parameter. The parameter\npassed is a plain object containing the keys ",(0,i.kt)("inlineCode",{parentName:"p"},"id"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"get"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"set"),"."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"id")," is the store instance identifier. It will be undefined for the default\nstore."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"get")," is a function that actions use to query the current state."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"set")," is a function that actions use to change state values."),(0,i.kt)("p",null,"The function must return an object representing the initial state:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"\nconst state = ({ id, get, set }) => ({\n  counter: 0,\n  inc: () => set(state => {\n    state.counter++;\n  })\n});\n\n")),(0,i.kt)("h3",{id:"as-an-object"},"As an object"),(0,i.kt)("p",null,"State can also be defined as a plain object if there are no actions that require setting and querying state."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'\nconst state = {\n  field1: "value1",\n  field2: "value2",\n  nested: {\n    field1: "value1",\n    field2: "value2"\n  }\n};\n\n')),(0,i.kt)("h3",{id:"actions"},"Actions"),(0,i.kt)("p",null,"Actions are defined by functions inside the state object:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"\nconst state = ({ get, set }) => {\n  action1() { ... },\n  action2() { ... },\n  action3() { ... }\n};\n\n")),(0,i.kt)("h4",{id:"get"},"Get"),(0,i.kt)("p",null,"When an action only needs read access to the current state, it uses the ",(0,i.kt)("inlineCode",{parentName:"p"},"get"),"\nfunction:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'\nconst state = ({ get, set }) => {\n  logValue() {\n    get(state => {\n      console.log("value is", state.value);\n    });\n  },\n};\n\n')),(0,i.kt)("h4",{id:"set"},"Set"),(0,i.kt)("p",null,"An action uses the ",(0,i.kt)("inlineCode",{parentName:"p"},"set")," function to change state values."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'\nconst state = ({ get, set }) => {\n  field: "",\n  setField(val) {\n    set(state => {\n      state.field = val;\n    });\n  }\n};\n\n')),(0,i.kt)("h2",{id:"register"},"Register"),(0,i.kt)("p",null,"State is registered with a store instance. You may specify a store instance\nidentifier as the second parameter to ",(0,i.kt)("inlineCode",{parentName:"p"},"register"),". Omitting this parameter will\nregister state with the default store."),(0,i.kt)("h3",{id:"register-on-default-store"},"Register on default store:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"\nregister({ state });\n\n")),(0,i.kt)("h3",{id:"register-on-a-named-store"},"Register on a named store:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'\nregister({ state }, "Store1");\n\n')),(0,i.kt)("h2",{id:"multiple-registrations"},"Multiple registrations"),(0,i.kt)("h3",{id:"multiple-calls"},"Multiple calls"),(0,i.kt)("p",null,"When ",(0,i.kt)("inlineCode",{parentName:"p"},"register")," is called multiple times it merges state, potentially into a running store:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'\nregister({\n    state: {\n      field1: "value1"\n    }\n});\n\nregister({\n    state: {\n      field2: "value2"\n    }\n});\n\n// The store\'s state will look like:\n//{\n//  field1: "value1",\n//  field2: "value2"\n//}\n\n')),(0,i.kt)("h3",{id:"array-of-registrations"},"Array of registrations"),(0,i.kt)("p",null,"When registering more than one state, an array of registrations can be passed:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'\nconst state1 = {\n  field1: "value1"\n};\n\nconst state2 = {\n  field2: "value2"\n};\n\nregister([\n{ state: state1 },\n{ state: state2 }\n]);\n\n')))}u.isMDXComponent=!0}}]);