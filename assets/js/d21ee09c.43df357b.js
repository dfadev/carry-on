(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{105:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return b})),n.d(t,"default",(function(){return p}));var a=n(3),r=n(7),c=(n(0),n(113)),o={id:"State",title:"<State ...>"},i={unversionedId:"api/carry-on-react/State",id:"api/carry-on-react/State",isDocsHomePage:!1,title:"<State ...>",description:"Properties",source:"@site/../docs/api/carry-on-react/State.md",sourceDirName:"api/carry-on-react",slug:"/api/carry-on-react/State",permalink:"/carry-on/docs/api/carry-on-react/State",version:"current",lastUpdatedBy:"Russ Panula",lastUpdatedAt:1619676207,formattedLastUpdatedAt:"4/29/2021",frontMatter:{id:"State",title:"<State ...>"},sidebar:"docs",previous:{title:"getStore",permalink:"/carry-on/docs/api/carry-on-store/getStore"},next:{title:"withState",permalink:"/carry-on/docs/api/carry-on-react/withState"}},b=[{value:"Properties",id:"properties",children:[]},{value:"Accessing",id:"accessing",children:[]},{value:"Debugging",id:"debugging",children:[]}],l={toc:b};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"properties"},"Properties"),Object(c.b)("p",null,"All properties are optional."),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null},"Property"),Object(c.b)("th",{parentName:"tr",align:null},"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},"render")," or ",Object(c.b)("inlineCode",{parentName:"td"},"children")),Object(c.b)("td",{parentName:"tr",align:null},"The render function. This function will be called with the state as it's first parameter.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},"from")),Object(c.b)("td",{parentName:"tr",align:null},"What store to retrieve state from.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},"path")),Object(c.b)("td",{parentName:"tr",align:null},"The state path to retrieve. Specified as a dotted path string, with support for arrays. Sample: ",Object(c.b)("inlineCode",{parentName:"td"},'"my.field.path[10].name"'))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},"select")),Object(c.b)("td",{parentName:"tr",align:null},"A function that selects the required state.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},"constant")),Object(c.b)("td",{parentName:"tr",align:null},"When true, the ",Object(c.b)("inlineCode",{parentName:"td"},"State")," component will query state and render only once.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},"strict")),Object(c.b)("td",{parentName:"tr",align:null},"When true, the ",Object(c.b)("inlineCode",{parentName:"td"},"State")," will track accessed keys on every update instead of on just the first one.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},"default")),Object(c.b)("td",{parentName:"tr",align:null},"The default value when the state is undefined.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},"throttle")),Object(c.b)("td",{parentName:"tr",align:null},"Milliseconds to throttle change requests")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},"debounce")),Object(c.b)("td",{parentName:"tr",align:null},"Milliseconds to debounce change requests")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},"debug")),Object(c.b)("td",{parentName:"tr",align:null},"When true, log messages regarding state changes will be printed to the ",Object(c.b)("inlineCode",{parentName:"td"},"console"),".")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},"verbose")),Object(c.b)("td",{parentName:"tr",align:null},"When true, verbose log messages are printed to the ",Object(c.b)("inlineCode",{parentName:"td"},"console"),".")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},"id")),Object(c.b)("td",{parentName:"tr",align:null},"Debug log uses this to identify components")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},"onMount")),Object(c.b)("td",{parentName:"tr",align:null},"Called with the current state when the component mounts.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},"onUnmount")),Object(c.b)("td",{parentName:"tr",align:null},"Called with the current state when the component unmounts.")))),Object(c.b)("h2",{id:"accessing"},"Accessing"),Object(c.b)("p",null,"Accessing state is done using the State component:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-JavaScript"},"\nregister({\n  state: ({ set }) => ({\n    counter: 0,\n    inc: () => set(state => { state.counter++; }),\n    dec: () => set(state => { state.counter--; })\n  })\n});\n\nconst App = () => (\n  <State>\n    {state => (\n      <>\n        <div>Counter: {state.counter}</div>\n        <button onClick={state.inc}>+</button>\n        <button onClick={state.dec}>-</button>\n      </>\n    )}\n  </State>\n);\n\n")),Object(c.b)("h2",{id:"debugging"},"Debugging"),Object(c.b)("p",null,"Using ",Object(c.b)("inlineCode",{parentName:"p"},"debug")," and ",Object(c.b)("inlineCode",{parentName:"p"},"verbose")," can help find problems:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-JavaScript"},"\nregister({\n  state: ({ set }) => ({\n    counter: 0,\n    inc: () => set(state => { state.counter++; }),\n    dec: () => set(state => { state.counter--; })\n  })\n});\n\nconst App = () => (\n  <State debug verbose>\n    {state => (\n      <>\n        <div>Counter: {state.counter}</div>\n        <button onClick={state.inc}>+</button>\n        <button onClick={state.dec}>-</button>\n      </>\n    )}\n  </State>\n);\n\n")),Object(c.b)("p",null,"Enabling ",Object(c.b)("inlineCode",{parentName:"p"},"debug")," and ",Object(c.b)("inlineCode",{parentName:"p"},"verbose")," on all State components:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-JavaScript"},"\nregister({\n  state: ({ set }) => ({\n    counter: 0,\n    inc: () => set(state => { state.counter++; }),\n    dec: () => set(state => { state.counter--; })\n  })\n});\n\nState.Debug = true;\nState.Verbose = true;\n\nconst App = () => (\n  <State>\n    {state => (\n      <>\n        <div>Counter: {state.counter}</div>\n        <button onClick={state.inc}>+</button>\n        <button onClick={state.dec}>-</button>\n      </>\n    )}\n  </State>\n);\n\n")))}p.isMDXComponent=!0},113:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),p=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,o=e.parentName,l=b(e,["components","mdxType","originalType","parentName"]),d=p(n),u=a,m=d["".concat(o,".").concat(u)]||d[u]||s[u]||c;return n?r.a.createElement(m,i(i({ref:t},l),{},{components:n})):r.a.createElement(m,i({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,o=new Array(c);o[0]=u;var i={};for(var b in t)hasOwnProperty.call(t,b)&&(i[b]=t[b]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var l=2;l<c;l++)o[l]=n[l];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);