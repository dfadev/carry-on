(self.webpackChunk=self.webpackChunk||[]).push([[566],{3905:(e,t,n)=>{"use strict";n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=l(n),m=o,v=p["".concat(c,".").concat(m)]||p[m]||d[m]||a;return n?r.createElement(v,s(s({ref:t},u),{},{components:n})):r.createElement(v,s({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=p;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var l=2;l<a;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},7589:(e,t,n)=>{"use strict";n.r(t),n.d(t,{frontMatter:()=>s,metadata:()=>i,toc:()=>c,default:()=>u});var r=n(2122),o=n(9756),a=(n(7294),n(3905)),s={id:"index",slug:"/examples/",title:"Examples"},i={unversionedId:"examples/index",id:"examples/index",isDocsHomePage:!1,title:"Examples",description:"Default store",source:"@site/../docs/examples/index.md",sourceDirName:"examples",slug:"/examples/",permalink:"/carry-on/docs/examples/",version:"current",lastUpdatedBy:"Russ Panula",lastUpdatedAt:1620020369,formattedLastUpdatedAt:"5/3/2021",frontMatter:{id:"index",slug:"/examples/",title:"Examples"},sidebar:"docs",previous:{title:"Using State",permalink:"/carry-on/docs/usingState"},next:{title:"deleteStore",permalink:"/carry-on/docs/api/carry-on-store/deleteStore"}},c=[{value:"Default store",id:"default-store",children:[]},{value:"Two named stores",id:"two-named-stores",children:[]},{value:"State select",id:"state-select",children:[]},{value:"Register state",id:"register-state",children:[]},{value:"Register state on a named store",id:"register-state-on-a-named-store",children:[]},{value:"State path",id:"state-path",children:[]},{value:"State path with default",id:"state-path-with-default",children:[]},{value:"State path on a named store using from",id:"state-path-on-a-named-store-using-from",children:[]},{value:"Multiple select",id:"multiple-select",children:[]}],l={toc:c};function u(e){var t=e.components,n=(0,o.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"default-store"},"Default store"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"live noInline",live:!0,noInline:!0},"register({\n  state: ({ set }) => ({\n    counter: 0,\n    inc: () => set(state => void state.counter++),\n    dec: () => set(state => void state.counter--)\n  })\n});\n\nconst App = () => (\n  <State>\n    {state => (\n      <>\n        <div>Counter: {state.counter}</div>\n        <button onClick={state.inc}>+</button>\n        <button onClick={state.dec}>-</button>\n      </>\n    )}\n  </State>\n);\n\nrender(<App />);\n")),(0,a.kt)("h2",{id:"two-named-stores"},"Two named stores"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"live noInline",live:!0,noInline:!0},'const store = {\n  state: ({ set }) => ({\n    counter: 0,\n    inc: () => set(state => void state.counter++),\n    dec: () => set(state => void state.counter--)\n  })\n};\n\nregister(store, "store1");\nregister(store, "store2");\n\nconst App = () => (\n  <>\n    <State from="store1">\n      {state => (\n        <div>\n          <div>Counter: {state.counter}</div>\n          <button onClick={state.inc}>+</button>\n          <button onClick={state.dec}>-</button>\n        </div>\n      )}\n    </State>\n    <State from="store2">\n      {({ counter, inc, dec }) => (\n        <div>\n          <div>Counter: {counter}</div>\n          <button onClick={inc}>+</button>\n          <button onClick={dec}>-</button>\n        </div>\n      )}\n    </State>\n  </>\n);\n\nrender(<App />);\n')),(0,a.kt)("h2",{id:"state-select"},"State select"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"live noInline",live:!0,noInline:!0},'register({\n  state: ({ set }) => ({\n    notSelected: "item",\n    counter: 0,\n    inc: () => set(state => void state.counter++),\n    dec: () => set(state => void state.counter--)\n  })\n});\n\nconst select = ({ counter, inc, dec }) => ({ counter, inc, dec });\n\nconst App = props => (\n  <State select={select}>\n    {({ counter, inc, dec, notSelected }) => (\n      <div>\n        <div>{notSelected}</div>\n        <div>Counter: {counter}</div>\n        <button onClick={inc}>+</button>\n        <button onClick={dec}>-</button>\n      </div>\n    )}\n  </State>\n);\n\nrender(<App />);\n')),(0,a.kt)("h2",{id:"register-state"},"Register state"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"live noInline",live:!0,noInline:!0},"register({\n  state: ({ set }) => ({\n    counter: 0,\n    inc: () => set(state => void state.counter++),\n    dec: () => set(state => void state.counter--)\n  })\n});\n\nconst App = () => (\n  <State>\n    {({ counter, inc, dec }) => (\n      <>\n        <div>Counter: {counter}</div>\n        <button onClick={inc}>+</button>\n        <button onClick={dec}>-</button>\n      </>\n    )}\n  </State>\n);\n\nrender(<App />);\n")),(0,a.kt)("h2",{id:"register-state-on-a-named-store"},"Register state on a named store"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"live noInline",live:!0,noInline:!0},'register(\n  {\n    state: ({ set }) => ({\n      counter: 0,\n      inc: () => set(state => void state.counter++),\n      dec: () => set(state => void state.counter--)\n    })\n  },\n  "store1"\n);\n\nconst App = () => (\n  <State from="store1">\n    {({ counter, inc, dec }) => (\n      <>\n        <div>Counter: {counter}</div>\n        <button onClick={inc}>+</button>\n        <button onClick={dec}>-</button>\n      </>\n    )}\n  </State>\n);\n\nrender(<App />);\n')),(0,a.kt)("h2",{id:"state-path"},"State path"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"live noInline",live:!0,noInline:!0},'register({\n  state: ({ set }) => ({\n    more: {\n      stuff: {\n        list: [{ item: "one" }, { item: "two" }]\n      }\n    }\n  })\n});\n\nconst App = () => (\n  <State path="more.stuff.list[0].item">\n    {item => {\n      return <div>{item}</div>;\n    }}\n  </State>\n);\n\nrender(<App />);\n')),(0,a.kt)("h2",{id:"state-path-with-default"},"State path with default"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"live noInline",live:!0,noInline:!0},'register({\n  state: ({ set }) => ({\n    more: {\n      stuff: {\n        list: [{ item: "one" }, { item: "two" }]\n      }\n    }\n  })\n});\n\nconst App = () => (\n  <State path="oops.more.stuff.list[0].item" default="ok">\n    {item => {\n      return <div>{item}</div>;\n    }}\n  </State>\n);\n\nrender(<App />);\n')),(0,a.kt)("h2",{id:"state-path-on-a-named-store-using-from"},"State path on a named store using from"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"live noInline",live:!0,noInline:!0},'\nregister(\n  {\n    state: ({ set }) => ({\n      more: {\n        stuff: {\n          list: [\n            {\n              item: "one"\n            },\n            {\n              item: "two"\n            }\n          ]\n        }\n      }\n    })\n  },\n  "store1"\n);\n\nconst App = () => (\n  <State from="store1" path="more.stuff.list[0].item">\n    {item => <div>{item}</div>}\n  </State>\n);\n\nrender(<App />);\n')),(0,a.kt)("h2",{id:"multiple-select"},"Multiple select"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"live noInline",live:!0,noInline:!0},"register({\n  state: ({ set }) => ({\n    counter: 0,\n    inc: () => set(state => void state.counter++),\n    dec: () => set(state => void state.counter--)\n  })\n});\n\nconst selectCounter = ({ counter }) => counter;\nconst selectActions = ({ inc, dec }) => ({ inc, dec });\n\nconst App = props => (\n  <div>\n    <State select={selectCounter}>\n      {counter => (\n        <>\n          <div>Counter: {counter}</div>\n          <State select={selectActions}>\n            {({ inc, dec }) => (\n              <Fragment>\n                <button onClick={inc}>+</button>\n                <button onClick={dec}>-</button>\n              </Fragment>\n            )}\n          </State>\n        </>\n      )}\n    </State>\n  </div>\n);\n\nrender(<App />);\n")))}u.isMDXComponent=!0}}]);