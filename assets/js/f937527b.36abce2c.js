(self.webpackChunk=self.webpackChunk||[]).push([[5633],{3905:(t,e,n)=>{"use strict";n.d(e,{Zo:()=>s,kt:()=>u});var a=n(67294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},o=Object.keys(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var p=a.createContext({}),d=function(t){var e=a.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},s=function(t){var e=d(t.components);return a.createElement(p.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,o=t.originalType,p=t.parentName,s=l(t,["components","mdxType","originalType","parentName"]),m=d(n),u=r,h=m["".concat(p,".").concat(u)]||m[u]||c[u]||o;return n?a.createElement(h,i(i({ref:e},s),{},{components:n})):a.createElement(h,i({ref:e},s))}));function u(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var p in e)hasOwnProperty.call(e,p)&&(l[p]=e[p]);l.originalType=t,l.mdxType="string"==typeof t?t:r,i[1]=l;for(var d=2;d<o;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},78685:(t,e,n)=>{"use strict";n.r(e),n.d(e,{frontMatter:()=>i,contentTitle:()=>l,metadata:()=>p,toc:()=>d,default:()=>c});var a=n(22122),r=n(19756),o=(n(67294),n(3905)),i={id:"withState",title:"withState"},l=void 0,p={unversionedId:"api/carry-on-react/withState",id:"api/carry-on-react/withState",isDocsHomePage:!1,title:"withState",description:"withState(opt)(Component)",source:"@site/../docs/api/carry-on-react/withState.md",sourceDirName:"api/carry-on-react",slug:"/api/carry-on-react/withState",permalink:"/carry-on/docs/api/carry-on-react/withState",version:"current",lastUpdatedBy:"Russ Panula",lastUpdatedAt:1621950012,formattedLastUpdatedAt:"5/25/2021",frontMatter:{id:"withState",title:"withState"},sidebar:"docs",previous:{title:"carryOn",permalink:"/carry-on/docs/api/carry-on-react/carryOn"},next:{title:"<Field>",permalink:"/carry-on/docs/api/carry-on-react-forms/Field"}},d=[{value:"<code>withState(opt)(Component)</code>",id:"withstateoptcomponent",children:[{value:"withState options",id:"withstate-options",children:[]}]}],s={toc:d};function c(t){var e=t.components,n=(0,r.Z)(t,["components"]);return(0,o.kt)("wrapper",(0,a.Z)({},s,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"withstateoptcomponent"},(0,o.kt)("inlineCode",{parentName:"h2"},"withState(opt)(Component)")),(0,o.kt)("p",null,"A higher order component that injects state into the wrapped component."),(0,o.kt)("h3",{id:"withstate-options"},"withState options"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Property"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"asProp")),(0,o.kt)("td",{parentName:"tr",align:null},"Specify what prop to pass the state to the wrapped component as.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"from")),(0,o.kt)("td",{parentName:"tr",align:null},"What store to retrieve state from.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"path")),(0,o.kt)("td",{parentName:"tr",align:null},"The state path to retrieve. Specified as a dotted path string, with support for arrays. Sample: ",(0,o.kt)("inlineCode",{parentName:"td"},'"my.field.path[10].name"'))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"select")),(0,o.kt)("td",{parentName:"tr",align:null},"A function that selects the required state.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"constant")),(0,o.kt)("td",{parentName:"tr",align:null},"When true, the ",(0,o.kt)("inlineCode",{parentName:"td"},"State")," component will query state and render only once.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"strict")),(0,o.kt)("td",{parentName:"tr",align:null},"When true, the ",(0,o.kt)("inlineCode",{parentName:"td"},"State")," will track accessed keys on every update instead of on just the first one.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"default")),(0,o.kt)("td",{parentName:"tr",align:null},"The default value when the state is undefined.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"throttle")),(0,o.kt)("td",{parentName:"tr",align:null},"Milliseconds to throttle change requests")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"debounce")),(0,o.kt)("td",{parentName:"tr",align:null},"Milliseconds to debounce change requests")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"debug")),(0,o.kt)("td",{parentName:"tr",align:null},"When true, log messages regarding state changes will be printed to the ",(0,o.kt)("inlineCode",{parentName:"td"},"console"),".")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"verbose")),(0,o.kt)("td",{parentName:"tr",align:null},"When true, verbose log messages are printed to the ",(0,o.kt)("inlineCode",{parentName:"td"},"console"),".")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"id")),(0,o.kt)("td",{parentName:"tr",align:null},"Debug log uses this to identify components")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"onMount")),(0,o.kt)("td",{parentName:"tr",align:null},"Called with the current state when the component mounts.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"onUnmount")),(0,o.kt)("td",{parentName:"tr",align:null},"Called with the current state when the component unmounts.")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import { withState } from "carry-on-react";\n\nconst App = withState({ path: "counter", asProp: "counter" })(props => (\n  <div>{counter}</div>\n));\n')),(0,o.kt)("p",null,"The properties used to pass state to the wrapped component are determined by:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("inlineCode",{parentName:"li"},"asProp")," option, if specified"),(0,o.kt)("li",{parentName:"ul"},"If the state or ",(0,o.kt)("inlineCode",{parentName:"li"},"select")," result is an object it will be spread onto multiple props"),(0,o.kt)("li",{parentName:"ul"},"When the state isn't an object it will be passed as the ",(0,o.kt)("inlineCode",{parentName:"li"},"state")," property.")),(0,o.kt)("p",null,"Normally you would always use the ",(0,o.kt)("inlineCode",{parentName:"p"},"path")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"select")," options when using ",(0,o.kt)("inlineCode",{parentName:"p"},"withState")," because without them your component would render on every state change:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import { withState } from "carry-on-react";\n\nconst App = withState()(props => <div>I render every state change</div>);\n')))}c.isMDXComponent=!0}}]);