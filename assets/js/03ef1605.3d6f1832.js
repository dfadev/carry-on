(self.webpackChunk=self.webpackChunk||[]).push([[130],{3905:(e,t,r)=>{"use strict";r.d(t,{Zo:()=>s,kt:()=>m});var n=r(27378);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},s=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=p(r),m=a,y=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return r?n.createElement(y,c(c({ref:t},s),{},{components:r})):n.createElement(y,c({ref:t},s))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,c=new Array(o);c[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var p=2;p<o;p++)c[p]=r[p];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},51216:(e,t,r)=>{"use strict";r.r(t),r.d(t,{frontMatter:()=>c,contentTitle:()=>i,metadata:()=>l,toc:()=>p,default:()=>u});var n=r(22122),a=r(19756),o=(r(27378),r(3905)),c={id:"Store",title:"<Store>"},i=void 0,l={unversionedId:"api/carry-on-react/Store",id:"api/carry-on-react/Store",isDocsHomePage:!1,title:"<Store>",description:"Specify a store that child components will use.",source:"@site/../docs/api/carry-on-react/Store.md",sourceDirName:"api/carry-on-react",slug:"/api/carry-on-react/Store",permalink:"/carry-on/docs/api/carry-on-react/Store",version:"current",lastUpdatedBy:"Russ Panula",lastUpdatedAt:1622100530,formattedLastUpdatedAt:"5/27/2021",frontMatter:{id:"Store",title:"<Store>"},sidebar:"docs",previous:{title:"<State>",permalink:"/carry-on/docs/api/carry-on-react/State"},next:{title:"carryOn",permalink:"/carry-on/docs/api/carry-on-react/carryOn"}},p=[{value:"Properties",id:"properties",children:[]}],s={toc:p};function u(e){var t=e.components,r=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Specify a store that child components will use."),(0,o.kt)("h2",{id:"properties"},"Properties"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Property"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"id")),(0,o.kt)("td",{parentName:"tr",align:null},"The store ID")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"live noInline",live:!0,noInline:!0},'import { State } from "carry-on-react";\nimport { register } from "carry-on-store";\n\nconst storeId = "getStarted";\n\nregister(storeId, {\n  state: ({ set }) => ({\n    counter: 0,\n    inc: () =>\n      set(state => {\n        state.counter += 1;\n      }),\n    dec: () =>\n      set(state => {\n        state.counter -= 1;\n      })\n  })\n});\n\nrender(\n  <Store id={storeId}>\n    <State>\n      {({ counter, inc, dec }) => (\n        <>\n          <div>Counter: {counter}</div>\n          <button onClick={inc}>+</button>\n          <button onClick={dec}>-</button>\n          <StateInspector from={storeId} />\n        </>\n      )}\n    </State>\n  </Store>\n);\n')))}u.isMDXComponent=!0}}]);