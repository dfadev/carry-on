(self.webpackChunk=self.webpackChunk||[]).push([[6730],{3905:(n,e,i)=>{"use strict";i.d(e,{Zo:()=>p,kt:()=>v});var t=i(67294);function r(n,e,i){return e in n?Object.defineProperty(n,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):n[e]=i,n}function o(n,e){var i=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);e&&(t=t.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),i.push.apply(i,t)}return i}function d(n){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?o(Object(i),!0).forEach((function(e){r(n,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(i)):o(Object(i)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(i,e))}))}return n}function l(n,e){if(null==n)return{};var i,t,r=function(n,e){if(null==n)return{};var i,t,r={},o=Object.keys(n);for(t=0;t<o.length;t++)i=o[t],e.indexOf(i)>=0||(r[i]=n[i]);return r}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(t=0;t<o.length;t++)i=o[t],e.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(n,i)&&(r[i]=n[i])}return r}var a=t.createContext({}),c=function(n){var e=t.useContext(a),i=e;return n&&(i="function"==typeof n?n(e):d(d({},e),n)),i},p=function(n){var e=c(n.components);return t.createElement(a.Provider,{value:e},n.children)},s={inlineCode:"code",wrapper:function(n){var e=n.children;return t.createElement(t.Fragment,{},e)}},m=t.forwardRef((function(n,e){var i=n.components,r=n.mdxType,o=n.originalType,a=n.parentName,p=l(n,["components","mdxType","originalType","parentName"]),m=c(i),v=r,u=m["".concat(a,".").concat(v)]||m[v]||s[v]||o;return i?t.createElement(u,d(d({ref:e},p),{},{components:i})):t.createElement(u,d({ref:e},p))}));function v(n,e){var i=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var o=i.length,d=new Array(o);d[0]=m;var l={};for(var a in e)hasOwnProperty.call(e,a)&&(l[a]=e[a]);l.originalType=n,l.mdxType="string"==typeof n?n:r,d[1]=l;for(var c=2;c<o;c++)d[c]=i[c];return t.createElement.apply(null,d)}return t.createElement.apply(null,i)}m.displayName="MDXCreateElement"},15342:(n,e,i)=>{"use strict";i.r(e),i.d(e,{frontMatter:()=>d,contentTitle:()=>l,metadata:()=>a,toc:()=>c,default:()=>s});var t=i(22122),r=i(19756),o=(i(67294),i(3905)),d={id:"FormView",title:"<FormView>"},l=void 0,a={unversionedId:"api/carry-on-react-view/FormView",id:"api/carry-on-react-view/FormView",isDocsHomePage:!1,title:"<FormView>",description:"Render a view described by JSON.",source:"@site/../docs/api/carry-on-react-view/FormView.md",sourceDirName:"api/carry-on-react-view",slug:"/api/carry-on-react-view/FormView",permalink:"/carry-on/docs/api/carry-on-react-view/FormView",version:"current",lastUpdatedBy:"Russ Panula",lastUpdatedAt:1625042761,formattedLastUpdatedAt:"6/30/2021",frontMatter:{id:"FormView",title:"<FormView>"},sidebar:"docs",previous:{title:"withRouter",permalink:"/carry-on/docs/api/carry-on-react-router/withRouter"},next:{title:"ButtonField",permalink:"/carry-on/docs/api/carry-on-material-view/ButtonField"}},c=[],p={toc:c};function s(n){var e=n.components,i=(0,r.Z)(n,["components"]);return(0,o.kt)("wrapper",(0,t.Z)({},p,i,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Render a view described by JSON."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"live noInline",live:!0,noInline:!0},'const view = {\n  id: "formView1",\n  initialValues: {\n    abc: "123",\n    def: "345",\n    ghi: undefined,\n    jkl: null\n  },\n  sections: [\n    {\n      title: "Section 1",\n      layout: ["abc", "def"]\n    },\n    {\n      title: "Section 2",\n      layout: [["ghi"], ["jkl"]]\n    }\n  ],\n  fields: {\n    abc: {\n      label: "ABC",\n      tooltip: () => <div>ABC tooltip</div>\n    }\n  },\n  components: {\n    FormViewBox: ({ children }) => (\n      <div style={{ border: "1px solid purple", padding: "16px" }}>\n        <h2>FormViewBox</h2>\n        {children}\n      </div>\n    ),\n    SectionBox: ({ section: { title } = {}, children }) => (\n      <div\n        style={{ border: "1px solid blue", margin: "16px", padding: "16px" }}\n      >\n        <h2>SectionBox: {title}</h2>\n        {children}\n      </div>\n    ),\n    View: ({ children }) => (\n      <div style={{ border: "1px solid red", margin: "16px", padding: "16px" }}>\n        <div>\n          <h2>View</h2>\n        </div>\n        <div style={{ display: "flex" }}>{children}</div>\n      </div>\n    ),\n    ViewItem: ({ children }) => (\n      <div\n        style={{ border: "1px solid white", margin: "16px", padding: "16px" }}\n      >\n        <div>\n          <h2>ViewItem</h2>\n        </div>\n        <div style={{ display: "block" }} margin="16px" padding="16px">\n          {children}\n        </div>\n      </div>\n    ),\n    editors: {}\n  }\n};\n\nrender(\n  <Store id="formViewStore">\n    <FormView {...view} />\n    <StateInspector />\n  </Store>\n);\n')),(0,o.kt)("p",null,"Register default components:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"live noInline",live:!0,noInline:!0},'register("formViewStore2", {\n  state: {\n    components: {\n      FormViewBox: ({ children }) => (\n        <div style={{ border: "1px solid purple", padding: "16px" }}>\n          <h2>FormViewBox</h2>\n          {children}\n        </div>\n      ),\n      SectionBox: ({ section: { title } = {}, children }) => (\n        <div\n          style={{ border: "1px solid blue", margin: "16px", padding: "16px" }}\n        >\n          <h2>SectionBox: {title}</h2>\n          {children}\n        </div>\n      ),\n      View: ({ children }) => (\n        <div\n          style={{ border: "1px solid red", margin: "16px", padding: "16px" }}\n        >\n          <div>\n            <h2>View</h2>\n          </div>\n          <div style={{ display: "flex" }}>{children}</div>\n        </div>\n      ),\n      ViewItem: ({ children }) => (\n        <div\n          style={{ border: "1px solid white", margin: "16px", padding: "16px" }}\n        >\n          <div>\n            <h2>ViewItem</h2>\n          </div>\n          <div style={{ display: "block" }} margin="16px" padding="16px">\n            {children}\n          </div>\n        </div>\n      ),\n      editors: {}\n    }\n  }\n});\n\nconst view = {\n  id: "formView2",\n  initialValues: {\n    abc: "123",\n    def: "345",\n    ghi: undefined,\n    jkl: null\n  },\n  sections: [\n    {\n      title: "Section 1",\n      layout: [["abc", "def"]]\n    },\n    {\n      title: "Section 2",\n      layout: [["ghi"], ["jkl"]]\n    }\n  ],\n  fields: {\n    abc: {\n      label: "ABC"\n    }\n  }\n};\n\nrender(\n  <Store id="formViewStore2">\n    <FormView {...view} />\n    <StateInspector />\n  </Store>\n);\n')),(0,o.kt)("p",null,"Composing"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"live noInline",live:!0,noInline:!0},'const components = {\n  components: {\n    FormViewBox: ({ children }) => (\n      <div style={{ border: "1px solid purple", padding: "16px" }}>\n        <h2>FormViewBox</h2>\n        {children}\n      </div>\n    ),\n    SectionBox: ({ section: { title } = {}, children }) => (\n      <div\n        style={{ border: "1px solid blue", margin: "16px", padding: "16px" }}\n      >\n        <h2>SectionBox: {title}</h2>\n        {children}\n      </div>\n    ),\n    View: ({ children }) => (\n      <div style={{ border: "1px solid red", margin: "16px", padding: "16px" }}>\n        <div>\n          <h2>View</h2>\n        </div>\n        <div style={{ display: "flex" }}>{children}</div>\n      </div>\n    ),\n    ViewItem: ({ children }) => (\n      <div\n        style={{ border: "1px solid white", margin: "16px", padding: "16px" }}\n      >\n        <div>\n          <h2>ViewItem</h2>\n        </div>\n        <div style={{ display: "block" }} margin="16px" padding="16px">\n          {children}\n        </div>\n      </div>\n    ),\n    editors: {}\n  }\n};\n\nrender(\n  <Store id="formViewStoreComposing">\n    <State>\n      <Register>{{ components }}</Register>\n    </State>\n    <FormView id="formViewComposing">\n      <InitialValues>\n        {{\n          abc: "abc"\n        }}\n      </InitialValues>\n      <Sections>\n        <Section title="Section 1">{["abc", "def"]}</Section>\n        <Section title="Section 2">{[["ghi"], ["jkl"]]}</Section>\n      </Sections>\n      <Fields>\n        <Field name="abc">\n          {{\n            label: "ABC",\n            tooltip: "The ABC Tooltip"\n          }}\n        </Field>\n      </Fields>\n    </FormView>\n    <StateInspector />\n  </Store>\n);\n')))}s.isMDXComponent=!0}}]);