(self.webpackChunk=self.webpackChunk||[]).push([[754],{3905:(e,t,n)=>{"use strict";n.d(t,{Zo:()=>p,kt:()=>b});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),l=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),b=a,m=d["".concat(i,".").concat(b)]||d[b]||u[b]||o;return n?r.createElement(m,c(c({ref:t},p),{},{components:n})):r.createElement(m,c({ref:t},p))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,c[1]=s;for(var l=2;l<o;l++)c[l]=n[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3205:(e,t,n)=>{"use strict";n.r(t),n.d(t,{frontMatter:()=>c,metadata:()=>s,toc:()=>i,default:()=>p});var r=n(2122),a=n(9756),o=(n(7294),n(3905)),c={id:"subscribe",title:"subscribe"},s={unversionedId:"api/carry-on-store/subscribe",id:"api/carry-on-store/subscribe",isDocsHomePage:!1,title:"subscribe",description:"Import",source:"@site/../docs/api/carry-on-store/subscribe.md",sourceDirName:"api/carry-on-store",slug:"/api/carry-on-store/subscribe",permalink:"/carry-on/docs/api/carry-on-store/subscribe",version:"current",lastUpdatedBy:"Russ Panula",lastUpdatedAt:1619946735,formattedLastUpdatedAt:"5/2/2021",frontMatter:{id:"subscribe",title:"subscribe"},sidebar:"docs",previous:{title:"register",permalink:"/carry-on/docs/api/carry-on-store/register"},next:{title:"watch",permalink:"/carry-on/docs/api/carry-on-store/watch"}},i=[{value:"Import",id:"import",children:[]},{value:"<code>subscribe(callback,</code><em><code>watch</code></em><code>,</code><em><code>storeId</code></em><code>)</code>",id:"subscribecallbackwatchstoreid",children:[]},{value:"Subscribe to all changes",id:"subscribe-to-all-changes",children:[]},{value:"Subscribe to some changes",id:"subscribe-to-some-changes",children:[]}],l={toc:i};function p(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"import"},"Import"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'\nimport { subscribe } from "carry-on-store";\n\n')),(0,o.kt)("h2",{id:"subscribecallbackwatchstoreid"},(0,o.kt)("inlineCode",{parentName:"h2"},"subscribe(callback,"),(0,o.kt)("em",{parentName:"h2"},(0,o.kt)("inlineCode",{parentName:"em"},"watch")),(0,o.kt)("inlineCode",{parentName:"h2"},","),(0,o.kt)("em",{parentName:"h2"},(0,o.kt)("inlineCode",{parentName:"em"},"storeId")),(0,o.kt)("inlineCode",{parentName:"h2"},")")),(0,o.kt)("p",null,"Subscribe to state changes. Returns a function that will unsubscribe."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"callback")),(0,o.kt)("td",{parentName:"tr",align:null},"Function to call when state changes.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"watch")),(0,o.kt)("td",{parentName:"tr",align:null},"Optional object representing state keys to subscribe to")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"storeId")),(0,o.kt)("td",{parentName:"tr",align:null},"The name of the store to subscribe to.")))),(0,o.kt)("h2",{id:"subscribe-to-all-changes"},"Subscribe to all changes"),(0,o.kt)("p",null,"Only specifying the callback will subscribe to all state changes."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'\nconst stateChanged = (state, changes) => {\n  console.log("state changed", state, changes);\n};\n\nsubscribe(stateChanged);\n\n')),(0,o.kt)("h2",{id:"subscribe-to-some-changes"},"Subscribe to some changes"),(0,o.kt)("p",null,"Specifying the ",(0,o.kt)("inlineCode",{parentName:"p"},"watch")," parameter allows you to control what state changes will\nexecute the ",(0,o.kt)("inlineCode",{parentName:"p"},"callback")," function."),(0,o.kt)("p",null,"In this example, any changes to the fields ",(0,o.kt)("inlineCode",{parentName:"p"},"field1"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"nested"),", and\n",(0,o.kt)("inlineCode",{parentName:"p"},"nested.field")," will cause the ",(0,o.kt)("inlineCode",{parentName:"p"},"callback")," function to execute."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'\nconst stateChanged = (state, changes) => {\n  console.log("state changed", state, changes);\n};\n\nconst watches = {\n  field1: true,\n  nested: {\n    field: true\n  }\n};\n\nsubscribe(stateChanged, watches);\n\n')))}p.isMDXComponent=!0}}]);