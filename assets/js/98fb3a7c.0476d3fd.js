(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{113:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return g}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),u=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=u(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),p=u(n),d=a,g=p["".concat(s,".").concat(d)]||p[d]||b[d]||i;return n?r.a.createElement(g,c(c({ref:t},l),{},{components:n})):r.a.createElement(g,c({ref:t},l))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=d;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c.mdxType="string"==typeof e?e:a,s[1]=c;for(var l=2;l<i;l++)s[l]=n[l];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},96:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return o})),n.d(t,"default",(function(){return u}));var a=n(3),r=n(7),i=(n(0),n(113)),s={id:"registeringState",title:"Registering State"},c={unversionedId:"registeringState",id:"registeringState",isDocsHomePage:!1,title:"Registering State",description:"Import",source:"@site/../docs/registeringState.md",sourceDirName:".",slug:"/registeringState",permalink:"/carry-on/docs/registeringState",version:"current",lastUpdatedBy:"Russ Panula",lastUpdatedAt:1619676207,formattedLastUpdatedAt:"4/29/2021",frontMatter:{id:"registeringState",title:"Registering State"},sidebar:"docs",previous:{title:"Getting Started",permalink:"/carry-on/docs/"},next:{title:"Using State",permalink:"/carry-on/docs/usingState"}},o=[{value:"Import",id:"import",children:[]},{value:"Define",id:"define",children:[{value:"As a function",id:"as-a-function",children:[]},{value:"As an object",id:"as-an-object",children:[]},{value:"Actions",id:"actions",children:[]}]},{value:"Register",id:"register",children:[{value:"Register on default store:",id:"register-on-default-store",children:[]},{value:"Register on a named store:",id:"register-on-a-named-store",children:[]}]},{value:"Multiple registrations",id:"multiple-registrations",children:[{value:"Multiple calls",id:"multiple-calls",children:[]},{value:"Array of registrations",id:"array-of-registrations",children:[]}]}],l={toc:o};function u(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"import"},"Import"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-JavaScript"},'\nimport { register } from "carry-on-store";\n\n')),Object(i.b)("h2",{id:"define"},"Define"),Object(i.b)("h3",{id:"as-a-function"},"As a function"),Object(i.b)("p",null,"State can be defined by a function accepting one parameter. The parameter\npassed is a plain object containing the keys ",Object(i.b)("inlineCode",{parentName:"p"},"id"),", ",Object(i.b)("inlineCode",{parentName:"p"},"get"),", and ",Object(i.b)("inlineCode",{parentName:"p"},"set"),"."),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"id")," is the store instance identifier. It will be undefined for the default\nstore."),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"get")," is a function that actions use to query the current state."),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"set")," is a function that actions use to change state values."),Object(i.b)("p",null,"The function must return an object representing the initial state:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-JavaScript"},"\nconst state = ({ id, get, set }) => ({\n  counter: 0,\n  inc: () => set(state => {\n    state.counter++;\n  })\n});\n\n")),Object(i.b)("h3",{id:"as-an-object"},"As an object"),Object(i.b)("p",null,"State can also be defined as a plain object if there are no actions that require setting and querying state."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-JavaScript"},'\nconst state = {\n  field1: "value1",\n  field2: "value2",\n  nested: {\n    field1: "value1",\n    field2: "value2"\n  }\n};\n\n')),Object(i.b)("h3",{id:"actions"},"Actions"),Object(i.b)("p",null,"Actions are defined by functions inside the state object:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-JavaScript"},"\nconst state = ({ get, set }) => {\n  action1() { ... },\n  action2() { ... },\n  action3() { ... }\n};\n\n")),Object(i.b)("h4",{id:"get"},"Get"),Object(i.b)("p",null,"When an action only needs read access to the current state, it uses the ",Object(i.b)("inlineCode",{parentName:"p"},"get"),"\nfunction:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-JavaScript"},'\nconst state = ({ get, set }) => {\n  logValue() {\n    get(state => {\n      console.log("value is", state.value);\n    });\n  },\n};\n\n')),Object(i.b)("h4",{id:"set"},"Set"),Object(i.b)("p",null,"An action uses the ",Object(i.b)("inlineCode",{parentName:"p"},"set")," function to change state values."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-JavaScript"},'\nconst state = ({ get, set }) => {\n  field: "",\n  setField(val) {\n    set(state => {\n      state.field = val;\n    });\n  }\n};\n\n')),Object(i.b)("h2",{id:"register"},"Register"),Object(i.b)("p",null,"State is registered with a store instance. You may specify a store instance\nidentifier as the second parameter to ",Object(i.b)("inlineCode",{parentName:"p"},"register"),". Omitting this parameter will\nregister state with the default store."),Object(i.b)("h3",{id:"register-on-default-store"},"Register on default store:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-JavaScript"},"\nregister({ state });\n\n")),Object(i.b)("h3",{id:"register-on-a-named-store"},"Register on a named store:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-JavaScript"},'\nregister({ state }, "Store1");\n\n')),Object(i.b)("h2",{id:"multiple-registrations"},"Multiple registrations"),Object(i.b)("h3",{id:"multiple-calls"},"Multiple calls"),Object(i.b)("p",null,"When ",Object(i.b)("inlineCode",{parentName:"p"},"register")," is called multiple times it merges state, potentially into a running store:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-JavaScript"},'\nregister({\n    state: {\n      field1: "value1"\n    }\n});\n\nregister({\n    state: {\n      field2: "value2"\n    }\n});\n\n// The store\'s state will look like:\n//{\n//  field1: "value1",\n//  field2: "value2"\n//}\n\n')),Object(i.b)("h3",{id:"array-of-registrations"},"Array of registrations"),Object(i.b)("p",null,"When registering more than one state, an array of registrations can be passed:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-JavaScript"},'\nconst state1 = {\n  field1: "value1"\n};\n\nconst state2 = {\n  field2: "value2"\n};\n\nregister([\n{ state: state1 },\n{ state: state2 }\n]);\n\n')))}u.isMDXComponent=!0}}]);