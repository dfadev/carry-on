(self.webpackChunk=self.webpackChunk||[]).push([[1719],{3905:(t,e,n)=>{"use strict";n.d(e,{Zo:()=>l,kt:()=>f});var r=n(67294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function c(t,e){if(null==t)return{};var n,r,o=function(t,e){if(null==t)return{};var n,r,o={},a=Object.keys(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var s=r.createContext({}),u=function(t){var e=r.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},l=function(t){var e=u(t.components);return r.createElement(s.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,o=t.mdxType,a=t.originalType,s=t.parentName,l=c(t,["components","mdxType","originalType","parentName"]),d=u(n),f=o,m=d["".concat(s,".").concat(f)]||d[f]||p[f]||a;return n?r.createElement(m,i(i({ref:e},l),{},{components:n})):r.createElement(m,i({ref:e},l))}));function f(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var a=n.length,i=new Array(a);i[0]=d;var c={};for(var s in e)hasOwnProperty.call(e,s)&&(c[s]=e[s]);c.originalType=t,c.mdxType="string"==typeof t?t:o,i[1]=c;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},44499:(t,e,n)=>{"use strict";n.r(e),n.d(e,{frontMatter:()=>i,contentTitle:()=>c,metadata:()=>s,toc:()=>u,default:()=>p});var r=n(22122),o=n(19756),a=(n(67294),n(3905)),i={id:"actionsAreFunctions",title:"Actions are Functions"},c=void 0,s={unversionedId:"actionsAreFunctions",id:"actionsAreFunctions",isDocsHomePage:!1,title:"Actions are Functions",description:"An action function mutates state and is stored as part of the state it mutates.",source:"@site/../docs/actionsAreFunctions.md",sourceDirName:".",slug:"/actionsAreFunctions",permalink:"/carry-on/docs/actionsAreFunctions",version:"current",lastUpdatedBy:"Russ Panula",lastUpdatedAt:1621809015,formattedLastUpdatedAt:"5/23/2021",frontMatter:{id:"actionsAreFunctions",title:"Actions are Functions"},sidebar:"docs",previous:{title:"Modern Immutability",permalink:"/carry-on/docs/modernImmutability"},next:{title:"State Driven Functions",permalink:"/carry-on/docs/stateDrivenFunctions"}},u=[],l={toc:u};function p(t){var e=t.components,n=(0,o.Z)(t,["components"]);return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"An action function mutates state and is stored as part of the state it mutates."),(0,a.kt)("p",null,"The state an action function modifies must be modified by code executing inside a call to the ",(0,a.kt)("inlineCode",{parentName:"p"},"set")," function provided by the store when registering state."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live noInline",live:!0,noInline:!0},'import { register } from "carry-on-store";\nimport { State } from "carry-on-react";\n\nconst storeId = "actionsAreFunctions";\n\nregister(storeId, {\n  // "get" and "set" functions are provided by store\n  state: ({ get, set }) => ({\n    counter: 0,\n    // action functions:\n    inc: () =>\n      set(state => {\n        state.counter++;\n      }),\n    dec: () =>\n      set(state => {\n        state.counter--;\n      })\n  })\n});\n\nrender(\n  <State from={storeId}>\n    {({ counter, inc, dec }) => (\n      <>\n        <div>Counter: {counter}</div>\n        <button onClick={inc}>+</button>\n        <button onClick={dec}>-</button>\n        <StateInspector from={storeId} />\n      </>\n    )}\n  </State>\n);\n')))}p.isMDXComponent=!0}}]);