(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{113:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),l=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,o=e.parentName,s=b(e,["components","mdxType","originalType","parentName"]),p=l(n),d=r,m=p["".concat(o,".").concat(d)]||p[d]||u[d]||c;return n?a.a.createElement(m,i(i({ref:t},s),{},{components:n})):a.a.createElement(m,i({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,o=new Array(c);o[0]=d;var i={};for(var b in t)hasOwnProperty.call(t,b)&&(i[b]=t[b]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var s=2;s<c;s++)o[s]=n[s];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},81:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return b})),n.d(t,"default",(function(){return l}));var r=n(3),a=n(7),c=(n(0),n(113)),o={id:"subscribe",title:"subscribe"},i={unversionedId:"api/carry-on-store/subscribe",id:"api/carry-on-store/subscribe",isDocsHomePage:!1,title:"subscribe",description:"Import",source:"@site/../docs/api/carry-on-store/subscribe.md",sourceDirName:"api/carry-on-store",slug:"/api/carry-on-store/subscribe",permalink:"/carry-on/docs/api/carry-on-store/subscribe",version:"current",lastUpdatedBy:"Russ Panula",lastUpdatedAt:1619676207,formattedLastUpdatedAt:"4/29/2021",frontMatter:{id:"subscribe",title:"subscribe"},sidebar:"docs",previous:{title:"register",permalink:"/carry-on/docs/api/carry-on-store/register"},next:{title:"getStore",permalink:"/carry-on/docs/api/carry-on-store/getStore"}},b=[{value:"Import",id:"import",children:[]},{value:"<code>subscribe(callback,</code><em><code>watch</code></em><code>,</code><em><code>storeId</code></em><code>)</code>",id:"subscribecallbackwatchstoreid",children:[]},{value:"Subscribe to all changes",id:"subscribe-to-all-changes",children:[]},{value:"Subscribe to some changes",id:"subscribe-to-some-changes",children:[]}],s={toc:b};function l(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"import"},"Import"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-JavaScript"},'\nimport { subscribe } from "carry-on-store";\n\n')),Object(c.b)("h2",{id:"subscribecallbackwatchstoreid"},Object(c.b)("inlineCode",{parentName:"h2"},"subscribe(callback,"),Object(c.b)("em",{parentName:"h2"},Object(c.b)("inlineCode",{parentName:"em"},"watch")),Object(c.b)("inlineCode",{parentName:"h2"},","),Object(c.b)("em",{parentName:"h2"},Object(c.b)("inlineCode",{parentName:"em"},"storeId")),Object(c.b)("inlineCode",{parentName:"h2"},")")),Object(c.b)("p",null,"Subscribe to state changes. Returns a function that will unsubscribe."),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null},"Parameter"),Object(c.b)("th",{parentName:"tr",align:null},"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},"callback")),Object(c.b)("td",{parentName:"tr",align:null},"Function to call when state changes.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},"watch")),Object(c.b)("td",{parentName:"tr",align:null},"Optional object representing state keys to subscribe to")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},"storeId")),Object(c.b)("td",{parentName:"tr",align:null},"The name of the store to subscribe to.")))),Object(c.b)("h2",{id:"subscribe-to-all-changes"},"Subscribe to all changes"),Object(c.b)("p",null,"Only specifying the callback will subscribe to all state changes."),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-JavaScript"},'\nconst stateChanged = (state, changes) => {\n  console.log("state changed", state, changes);\n};\n\nsubscribe(stateChanged);\n\n')),Object(c.b)("h2",{id:"subscribe-to-some-changes"},"Subscribe to some changes"),Object(c.b)("p",null,"Specifying the ",Object(c.b)("inlineCode",{parentName:"p"},"watch")," parameter allows you to control what state changes will\nexecute the ",Object(c.b)("inlineCode",{parentName:"p"},"callback")," function."),Object(c.b)("p",null,"In this example, any changes to the fields ",Object(c.b)("inlineCode",{parentName:"p"},"field1"),", ",Object(c.b)("inlineCode",{parentName:"p"},"nested"),", and\n",Object(c.b)("inlineCode",{parentName:"p"},"nested.field")," will cause the ",Object(c.b)("inlineCode",{parentName:"p"},"callback")," function to execute."),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-JavaScript"},'\nconst stateChanged = (state, changes) => {\n  console.log("state changed", state, changes);\n};\n\nconst watches = {\n  field1: true,\n  nested: {\n    field: true\n  }\n};\n\nsubscribe(stateChanged, watches);\n\n')))}l.isMDXComponent=!0}}]);