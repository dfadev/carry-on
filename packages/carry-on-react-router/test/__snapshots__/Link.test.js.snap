// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`A <Link> accepts a string \`to\` prop 1`] = `
<DocumentFragment>
  <a
    href="/the/path?the=query#the-hash"
  >
    link
  </a>
</DocumentFragment>
`;

exports[`A <Link> accepts an object \`to\` prop 1`] = `
<DocumentFragment>
  <a
    href="/the/path?the=query#the-hash"
  >
    link
  </a>
</DocumentFragment>
`;

exports[`A <Link> renders with no props 1`] = `
<DocumentFragment>
  <a
    href=""
  >
    link
  </a>
</DocumentFragment>
`;

exports[`A <Link> with a <HashRouter> with the "hashbang" hashType has the correct href 1`] = `
<DocumentFragment>
  <a
    href="#!/foo"
  />
</DocumentFragment>
`;

exports[`A <Link> with a <HashRouter> with the "hashbang" hashType has the correct href with a leading slash if it is missing 1`] = `
<DocumentFragment>
  <a
    href="#!/foo"
  />
</DocumentFragment>
`;

exports[`A <Link> with a <HashRouter> with the "noslash" hashType has the correct href 1`] = `
<DocumentFragment>
  <a
    href="#foo"
  />
</DocumentFragment>
`;

exports[`A <Link> with a <HashRouter> with the "noslash" hashType has the correct href and removes the leading slash 1`] = `
<DocumentFragment>
  <a
    href="#foo"
  />
</DocumentFragment>
`;

exports[`A <Link> with a <HashRouter> with the "slash" hashType has the correct href 1`] = `
<DocumentFragment>
  <a
    href="#/foo"
  />
</DocumentFragment>
`;

exports[`A <Link> with a <HashRouter> with the "slash" hashType has the correct href with a leading slash if it is missing 1`] = `
<DocumentFragment>
  <a
    href="#/foo"
  />
</DocumentFragment>
`;

exports[`A <Link> with no pathname, resolves using the current location 1`] = `
<DocumentFragment>
  <a
    href="/somewhere?rendersWithPathname=true"
  >
    link
  </a>
</DocumentFragment>
`;
