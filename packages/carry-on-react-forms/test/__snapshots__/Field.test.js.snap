// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should handle onChange 1`] = `
<DocumentFragment>
  <form
    id="theform"
  >
    <input
      id="default.theform.field1"
      name="default.theform.field1"
      type="text"
      value="0"
    />
  </form>
</DocumentFragment>
`;

exports[`should handle onChange 2`] = `
<DocumentFragment>
  <form
    id="theform"
  >
    <input
      id="default.theform.field1"
      name="default.theform.field1"
      type="text"
      value=""
    />
  </form>
</DocumentFragment>
`;

exports[`should handle onChange 3`] = `
<DocumentFragment>
  <form
    id="theform"
  >
    <input
      id="default.theform.field1"
      name="default.theform.field1"
      type="text"
      value="true"
    />
  </form>
</DocumentFragment>
`;

exports[`should handle onChange 4`] = `
<DocumentFragment>
  <form
    id="theform"
  >
    <input
      id="default.theform.field1"
      name="default.theform.field1"
      type="text"
      value=""
    />
  </form>
</DocumentFragment>
`;

exports[`should render <Field> 1`] = `<DocumentFragment />`;

exports[`should render a simple input field in named form: prop match 1`] = `
Object {
  "element": Object {
    "id": "default.theform.field1",
    "name": "default.theform.field1",
    "onBlur": [Function],
    "onChange": [Function],
    "onFocus": [Function],
    "type": "text",
    "value": "value1",
  },
  "error": undefined,
  "form": Object {
    "errors": Object {},
    "formId": "theform",
    "hasError": [Function],
    "hasVisited": [Function],
    "initialValues": Object {
      "checkbox": false,
      "field1": "value1",
      "field2": "value2",
    },
    "isPristine": true,
    "isSubmitting": false,
    "isTouched": [Function],
    "isValid": true,
    "isValidating": false,
    "onReset": [Function],
    "onSubmit": [Function],
    "onValidate": undefined,
    "origState": Object {
      "errors": Object {},
      "formId": "theform",
      "hasError": [Function],
      "hasVisited": [Function],
      "isPristine": true,
      "isSubmitting": false,
      "isTouched": [Function],
      "isValid": true,
      "isValidating": false,
      "reset": [Function],
      "setErrors": [Function],
      "setFieldError": [Function],
      "setFieldTouched": [Function],
      "setFieldValue": [Function],
      "setFieldVisited": [Function],
      "setInitialValues": [Function],
      "setTouched": [Function],
      "setValues": [Function],
      "submit": [Function],
      "submitCount": 0,
      "touched": Object {},
      "validate": [Function],
      "values": Object {
        "checkbox": false,
        "field1": "value1",
        "field2": "value2",
      },
      "visited": Object {},
    },
    "reset": [Function],
    "setErrors": [Function],
    "setFieldError": [Function],
    "setFieldTouched": [Function],
    "setFieldValue": [Function],
    "setFieldVisited": [Function],
    "setInitialValues": [Function],
    "setTouched": [Function],
    "setValues": [Function],
    "submit": [Function],
    "submitCount": 0,
    "touched": Object {},
    "validate": [Function],
    "values": Object {
      "checkbox": false,
      "field1": "value1",
      "field2": "value2",
    },
    "visited": Object {},
  },
  "setError": [Function],
  "setTouched": [Function],
  "setValue": [Function],
  "setVisited": [Function],
  "touched": false,
  "visited": false,
}
`;

exports[`should render a simple input field in named form: render match 1`] = `
<DocumentFragment>
  <form
    id="theform"
  >
    <input
      id="default.theform.field1"
      name="default.theform.field1"
      type="text"
      value="value1"
    />
  </form>
</DocumentFragment>
`;

exports[`should render a simple input field in named form: store match 1`] = `
Object {
  "theform": Object {
    "errors": Object {},
    "formId": "theform",
    "hasError": [Function],
    "hasVisited": [Function],
    "initialValues": Object {
      "checkbox": false,
      "field1": "value1",
      "field2": "value2",
    },
    "isPristine": true,
    "isSubmitting": false,
    "isTouched": [Function],
    "isValid": true,
    "isValidating": false,
    "onReset": [Function],
    "onSubmit": [Function],
    "onValidate": undefined,
    "origState": Object {
      "errors": Object {},
      "formId": "theform",
      "hasError": [Function],
      "hasVisited": [Function],
      "isPristine": true,
      "isSubmitting": false,
      "isTouched": [Function],
      "isValid": true,
      "isValidating": false,
      "reset": [Function],
      "setErrors": [Function],
      "setFieldError": [Function],
      "setFieldTouched": [Function],
      "setFieldValue": [Function],
      "setFieldVisited": [Function],
      "setInitialValues": [Function],
      "setTouched": [Function],
      "setValues": [Function],
      "submit": [Function],
      "submitCount": 0,
      "touched": Object {},
      "validate": [Function],
      "values": Object {
        "checkbox": false,
        "field1": "value1",
        "field2": "value2",
      },
      "visited": Object {},
    },
    "reset": [Function],
    "setErrors": [Function],
    "setFieldError": [Function],
    "setFieldTouched": [Function],
    "setFieldValue": [Function],
    "setFieldVisited": [Function],
    "setInitialValues": [Function],
    "setTouched": [Function],
    "setValues": [Function],
    "submit": [Function],
    "submitCount": 0,
    "touched": Object {},
    "validate": [Function],
    "values": Object {
      "checkbox": false,
      "field1": "value1",
      "field2": "value2",
    },
    "visited": Object {},
  },
}
`;

exports[`should render a simple input field: prop match 1`] = `
Object {
  "element": Object {
    "id": "default.form.field1",
    "name": "default.form.field1",
    "onBlur": [Function],
    "onChange": [Function],
    "onFocus": [Function],
    "type": "text",
    "value": "value1",
  },
  "error": undefined,
  "form": Object {
    "errors": Object {},
    "formId": "form",
    "hasError": [Function],
    "hasVisited": [Function],
    "initialValues": Object {
      "checkbox": false,
      "field1": "value1",
      "field2": "value2",
    },
    "isPristine": true,
    "isSubmitting": false,
    "isTouched": [Function],
    "isValid": true,
    "isValidating": false,
    "onReset": [Function],
    "onSubmit": [Function],
    "onValidate": undefined,
    "origState": Object {
      "errors": Object {},
      "formId": "form",
      "hasError": [Function],
      "hasVisited": [Function],
      "isPristine": true,
      "isSubmitting": false,
      "isTouched": [Function],
      "isValid": true,
      "isValidating": false,
      "reset": [Function],
      "setErrors": [Function],
      "setFieldError": [Function],
      "setFieldTouched": [Function],
      "setFieldValue": [Function],
      "setFieldVisited": [Function],
      "setInitialValues": [Function],
      "setTouched": [Function],
      "setValues": [Function],
      "submit": [Function],
      "submitCount": 0,
      "touched": Object {},
      "validate": [Function],
      "values": Object {
        "checkbox": false,
        "field1": "value1",
        "field2": "value2",
      },
      "visited": Object {},
    },
    "reset": [Function],
    "setErrors": [Function],
    "setFieldError": [Function],
    "setFieldTouched": [Function],
    "setFieldValue": [Function],
    "setFieldVisited": [Function],
    "setInitialValues": [Function],
    "setTouched": [Function],
    "setValues": [Function],
    "submit": [Function],
    "submitCount": 0,
    "touched": Object {},
    "validate": [Function],
    "values": Object {
      "checkbox": false,
      "field1": "value1",
      "field2": "value2",
    },
    "visited": Object {},
  },
  "setError": [Function],
  "setTouched": [Function],
  "setValue": [Function],
  "setVisited": [Function],
  "touched": false,
  "visited": false,
}
`;

exports[`should render a simple input field: render match 1`] = `
<DocumentFragment>
  <form
    id="form"
  >
    <input
      id="default.form.field1"
      name="default.form.field1"
      type="text"
      value="value1"
    />
  </form>
</DocumentFragment>
`;

exports[`should render a simple input field: store match 1`] = `
Object {
  "form": Object {
    "errors": Object {},
    "formId": "form",
    "hasError": [Function],
    "hasVisited": [Function],
    "initialValues": Object {
      "checkbox": false,
      "field1": "value1",
      "field2": "value2",
    },
    "isPristine": true,
    "isSubmitting": false,
    "isTouched": [Function],
    "isValid": true,
    "isValidating": false,
    "onReset": [Function],
    "onSubmit": [Function],
    "onValidate": undefined,
    "origState": Object {
      "errors": Object {},
      "formId": "form",
      "hasError": [Function],
      "hasVisited": [Function],
      "isPristine": true,
      "isSubmitting": false,
      "isTouched": [Function],
      "isValid": true,
      "isValidating": false,
      "reset": [Function],
      "setErrors": [Function],
      "setFieldError": [Function],
      "setFieldTouched": [Function],
      "setFieldValue": [Function],
      "setFieldVisited": [Function],
      "setInitialValues": [Function],
      "setTouched": [Function],
      "setValues": [Function],
      "submit": [Function],
      "submitCount": 0,
      "touched": Object {},
      "validate": [Function],
      "values": Object {
        "checkbox": false,
        "field1": "value1",
        "field2": "value2",
      },
      "visited": Object {},
    },
    "reset": [Function],
    "setErrors": [Function],
    "setFieldError": [Function],
    "setFieldTouched": [Function],
    "setFieldValue": [Function],
    "setFieldVisited": [Function],
    "setInitialValues": [Function],
    "setTouched": [Function],
    "setValues": [Function],
    "submit": [Function],
    "submitCount": 0,
    "touched": Object {},
    "validate": [Function],
    "values": Object {
      "checkbox": false,
      "field1": "value1",
      "field2": "value2",
    },
    "visited": Object {},
  },
}
`;
